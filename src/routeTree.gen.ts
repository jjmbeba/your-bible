/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignInRouteImport } from './routes/sign-in'
import { Route as SearchRouteImport } from './routes/search'
import { Route as BibleRouteImport } from './routes/bible'
import { Route as AuthedRouteRouteImport } from './routes/_authed/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthedProfileRouteImport } from './routes/_authed/profile'
import { Route as AuthedStoriesIndexRouteImport } from './routes/_authed/stories/index'
import { Route as AuthedCollectionsIndexRouteImport } from './routes/_authed/collections/index'
import { Route as AuthedStoriesCreateStoryRouteImport } from './routes/_authed/stories/create-story'
import { Route as AuthedStoriesStoryIdRouteImport } from './routes/_authed/stories/$storyId'
import { Route as AuthedCollectionsCollectionIdRouteImport } from './routes/_authed/collections/$collectionId'
import { ServerRoute as ApiUploadthingServerRouteImport } from './routes/api/uploadthing'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api/auth/$'

const rootServerRouteImport = createServerRootRoute()

const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const SearchRoute = SearchRouteImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => rootRouteImport,
} as any)
const BibleRoute = BibleRouteImport.update({
  id: '/bible',
  path: '/bible',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthedRouteRoute = AuthedRouteRouteImport.update({
  id: '/_authed',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthedProfileRoute = AuthedProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthedRouteRoute,
} as any)
const AuthedStoriesIndexRoute = AuthedStoriesIndexRouteImport.update({
  id: '/stories/',
  path: '/stories/',
  getParentRoute: () => AuthedRouteRoute,
} as any)
const AuthedCollectionsIndexRoute = AuthedCollectionsIndexRouteImport.update({
  id: '/collections/',
  path: '/collections/',
  getParentRoute: () => AuthedRouteRoute,
} as any)
const AuthedStoriesCreateStoryRoute =
  AuthedStoriesCreateStoryRouteImport.update({
    id: '/stories/create-story',
    path: '/stories/create-story',
    getParentRoute: () => AuthedRouteRoute,
  } as any)
const AuthedStoriesStoryIdRoute = AuthedStoriesStoryIdRouteImport.update({
  id: '/stories/$storyId',
  path: '/stories/$storyId',
  getParentRoute: () => AuthedRouteRoute,
} as any)
const AuthedCollectionsCollectionIdRoute =
  AuthedCollectionsCollectionIdRouteImport.update({
    id: '/collections/$collectionId',
    path: '/collections/$collectionId',
    getParentRoute: () => AuthedRouteRoute,
  } as any)
const ApiUploadthingServerRoute = ApiUploadthingServerRouteImport.update({
  id: '/api/uploadthing',
  path: '/api/uploadthing',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthedRouteRouteWithChildren
  '/bible': typeof BibleRoute
  '/search': typeof SearchRoute
  '/sign-in': typeof SignInRoute
  '/profile': typeof AuthedProfileRoute
  '/collections/$collectionId': typeof AuthedCollectionsCollectionIdRoute
  '/stories/$storyId': typeof AuthedStoriesStoryIdRoute
  '/stories/create-story': typeof AuthedStoriesCreateStoryRoute
  '/collections': typeof AuthedCollectionsIndexRoute
  '/stories': typeof AuthedStoriesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthedRouteRouteWithChildren
  '/bible': typeof BibleRoute
  '/search': typeof SearchRoute
  '/sign-in': typeof SignInRoute
  '/profile': typeof AuthedProfileRoute
  '/collections/$collectionId': typeof AuthedCollectionsCollectionIdRoute
  '/stories/$storyId': typeof AuthedStoriesStoryIdRoute
  '/stories/create-story': typeof AuthedStoriesCreateStoryRoute
  '/collections': typeof AuthedCollectionsIndexRoute
  '/stories': typeof AuthedStoriesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authed': typeof AuthedRouteRouteWithChildren
  '/bible': typeof BibleRoute
  '/search': typeof SearchRoute
  '/sign-in': typeof SignInRoute
  '/_authed/profile': typeof AuthedProfileRoute
  '/_authed/collections/$collectionId': typeof AuthedCollectionsCollectionIdRoute
  '/_authed/stories/$storyId': typeof AuthedStoriesStoryIdRoute
  '/_authed/stories/create-story': typeof AuthedStoriesCreateStoryRoute
  '/_authed/collections/': typeof AuthedCollectionsIndexRoute
  '/_authed/stories/': typeof AuthedStoriesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/bible'
    | '/search'
    | '/sign-in'
    | '/profile'
    | '/collections/$collectionId'
    | '/stories/$storyId'
    | '/stories/create-story'
    | '/collections'
    | '/stories'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/bible'
    | '/search'
    | '/sign-in'
    | '/profile'
    | '/collections/$collectionId'
    | '/stories/$storyId'
    | '/stories/create-story'
    | '/collections'
    | '/stories'
  id:
    | '__root__'
    | '/'
    | '/_authed'
    | '/bible'
    | '/search'
    | '/sign-in'
    | '/_authed/profile'
    | '/_authed/collections/$collectionId'
    | '/_authed/stories/$storyId'
    | '/_authed/stories/create-story'
    | '/_authed/collections/'
    | '/_authed/stories/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthedRouteRoute: typeof AuthedRouteRouteWithChildren
  BibleRoute: typeof BibleRoute
  SearchRoute: typeof SearchRoute
  SignInRoute: typeof SignInRoute
}
export interface FileServerRoutesByFullPath {
  '/api/uploadthing': typeof ApiUploadthingServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/uploadthing': typeof ApiUploadthingServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/uploadthing': typeof ApiUploadthingServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/uploadthing' | '/api/auth/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/uploadthing' | '/api/auth/$'
  id: '__root__' | '/api/uploadthing' | '/api/auth/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiUploadthingServerRoute: typeof ApiUploadthingServerRoute
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/search': {
      id: '/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/bible': {
      id: '/bible'
      path: '/bible'
      fullPath: '/bible'
      preLoaderRoute: typeof BibleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authed/profile': {
      id: '/_authed/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthedProfileRouteImport
      parentRoute: typeof AuthedRouteRoute
    }
    '/_authed/stories/': {
      id: '/_authed/stories/'
      path: '/stories'
      fullPath: '/stories'
      preLoaderRoute: typeof AuthedStoriesIndexRouteImport
      parentRoute: typeof AuthedRouteRoute
    }
    '/_authed/collections/': {
      id: '/_authed/collections/'
      path: '/collections'
      fullPath: '/collections'
      preLoaderRoute: typeof AuthedCollectionsIndexRouteImport
      parentRoute: typeof AuthedRouteRoute
    }
    '/_authed/stories/create-story': {
      id: '/_authed/stories/create-story'
      path: '/stories/create-story'
      fullPath: '/stories/create-story'
      preLoaderRoute: typeof AuthedStoriesCreateStoryRouteImport
      parentRoute: typeof AuthedRouteRoute
    }
    '/_authed/stories/$storyId': {
      id: '/_authed/stories/$storyId'
      path: '/stories/$storyId'
      fullPath: '/stories/$storyId'
      preLoaderRoute: typeof AuthedStoriesStoryIdRouteImport
      parentRoute: typeof AuthedRouteRoute
    }
    '/_authed/collections/$collectionId': {
      id: '/_authed/collections/$collectionId'
      path: '/collections/$collectionId'
      fullPath: '/collections/$collectionId'
      preLoaderRoute: typeof AuthedCollectionsCollectionIdRouteImport
      parentRoute: typeof AuthedRouteRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/uploadthing': {
      id: '/api/uploadthing'
      path: '/api/uploadthing'
      fullPath: '/api/uploadthing'
      preLoaderRoute: typeof ApiUploadthingServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface AuthedRouteRouteChildren {
  AuthedProfileRoute: typeof AuthedProfileRoute
  AuthedCollectionsCollectionIdRoute: typeof AuthedCollectionsCollectionIdRoute
  AuthedStoriesStoryIdRoute: typeof AuthedStoriesStoryIdRoute
  AuthedStoriesCreateStoryRoute: typeof AuthedStoriesCreateStoryRoute
  AuthedCollectionsIndexRoute: typeof AuthedCollectionsIndexRoute
  AuthedStoriesIndexRoute: typeof AuthedStoriesIndexRoute
}

const AuthedRouteRouteChildren: AuthedRouteRouteChildren = {
  AuthedProfileRoute: AuthedProfileRoute,
  AuthedCollectionsCollectionIdRoute: AuthedCollectionsCollectionIdRoute,
  AuthedStoriesStoryIdRoute: AuthedStoriesStoryIdRoute,
  AuthedStoriesCreateStoryRoute: AuthedStoriesCreateStoryRoute,
  AuthedCollectionsIndexRoute: AuthedCollectionsIndexRoute,
  AuthedStoriesIndexRoute: AuthedStoriesIndexRoute,
}

const AuthedRouteRouteWithChildren = AuthedRouteRoute._addFileChildren(
  AuthedRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthedRouteRoute: AuthedRouteRouteWithChildren,
  BibleRoute: BibleRoute,
  SearchRoute: SearchRoute,
  SignInRoute: SignInRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiUploadthingServerRoute: ApiUploadthingServerRoute,
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
